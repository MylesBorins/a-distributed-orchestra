doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Signal Processing 101

    link(rel='stylesheet', type='text/css', href='build/build.css')

  style.
    .hello {
      background-image: url('images/hello-tharr.gif')
    }
    
    .string-theory {
      background-image: url('images/string-theory.jpg')
    }
    
    .monome {
      background-image: url('images/monome.jpg')
    }
    
    .maxmsp {
      background-image: url('images/maxmsp.png')
    }
    
    .knoll {
      background-image: url('images/knoll.jpg')
    }
    
    .krang {
      background-image: url('images/krang.jpg')
    }
    
    .sampling {
      background-image: url('images/sampling.jpg')
    }
    
    .mindblown {
      background-image: url('images/mind-blown.gif')
    }
    
    .chumbawumba {
      background-image: url('images/chumbawumba.png')
    }
    
    .flux {
      background-image: url('images/flux.png')
    }
    
    .freq {
      background-image: url('images/freq-response.jpg')
    }
    
    .higher {
      background-image: url('images/44v96.jpg')
    }
    
    .telephone {
      background-image: url('images/telephone.jpg')
    }
    
    .mind-blown-again {
      background-image: url('images/mindblown-at.gif')
    }
    
    .chromatic {
      background-image: url('images/chromatic.png')
    }
    
    .pythagoras-three {
      background-image: url('images/pyth3.jpg')
    }
    
    .pythagoras-four {
      background-image: url('images/pyth4.jpg')
    }
    
    .pythagoras-five {
      background-image: url('images/pyth5.jpg')
    }
    
    .phish {
      background-image: url('images/phish.jpg')
    }
    
    .fifths {
      background-image: url('images/circle-of-fifths.png')
    }
    
    .diatonic {
      background-image: url('images/diatonic.jpg')
    }

    .hammer {
      background-image: url('images/hammer-time.gif')
    }
    
    .eleven {
      background-image: url('images/eleven.gif')
    }

  body

    article

      section
        h2 Signal Processing,
        h2 Perceptual Audio,
        h3 and The Web Audio API
        h4 With your host Myles Borins
        h4
          a(href='https://twitter.com/thealphanerd') @thealphanerd
        p  QueensJS October 2016

      section(data-bespoke-backdrop='hello')
        h1 Hello There
        
      section
        h1 My Name is Myles
        img.headroom(src='images/me.jpg' alt='itsa me!' width='200px')
      
      section
        h3 I currently work at a small disruptive startup called IBM
        h4 contributing to node.js
        
        img.headroom(src='images/ibm.jpg' alt='Eye Bee M by Paul Rand')
        
        h5 The opinions expressed in this talk are soley my own
        
      section(data-bespoke-backdrop='krang')
        h1 How does our brain interpret sound?

      section
        img(src='images/ear.jpg' alt='because your ear silly')

      section
        h2 HRTF
        img.headroom(src='images/HRTF.jpg' alt='head related transfer functions are cool')

      section
        h3 Exponential response!
        img(src='images/freq-response.jpg' alt='frequency response of the human ear')

      section
        img(src='images/double.jpg' alt='as frequency increases exponentially, how we experience pitch increases linearly' width="80%")

      section(data-bespoke-backdrop='mind-blown-again')
        h1 As frequency grows exponentially, we experience pitch linearly.

      section
        h2 http://kni.sh/voxelMeterJS/
        iframe.headroom(src='examples/voxel-meter' class='demo-iframe')
        a(href='https://github.com/TheAlphaNerd/voxel-meter-js/') View the Project on Github

      section
        h1 What is sampling?
        
      section
        img(src='images/mpc.jpg' alt='not two tables and a microphone, just an mpc' width='500px')
 
      section
        h2 Technically correct
        h2 but let's dive deeper
        
      section(data-bespoke-backdrop='sampling')
        h3 Sampling is the method of converting an analog signal to digital data.
        h3 Digital data which can eventually be turned back into an analogue signal.
        
      section
        h3 While you can sample many things
        h3 Today we are going to talk about sampling sound
        img.headroom(src='images/dropthebass.gif' alt='drop the bass')

      section
        h2 We sample sound any time we make a digital recording. 
        img.headroom(src='images/saywhat.gif')

      section
        h3 Unlike an analogue recording 
        h3 which happens in constant time
        h3 A digital recording needs to be represented in sampled blocks
      
      section(data-bespoke-backdrop='mindblown')
        h1 You can think of a sample as a pixel for sound!
        
      section
        h2 How about a quick primer on some audio slang
        img.headroom(src='images/bloodsport.gif' alt='a humorous gif making a scene from bloodsport appear to be a band playing KUMITE')
        
      section
        h2 Sample Rate
        h3 The number of samples used to represent a second of sound
        h4 A common Sample Rate is 44.1khz
      
      section
        h2 "Bit Depth"
        h3 The number of bits used to encode a single sample
        h4 A common bit depth is 16bit

      section
        h2 "Codec"
        h3 An algorithm used to encode an audio signal into digital data
        h3 A very common codec is mp3

      section
        h1 Tying this all together

      section(data-bespoke-backdrop='chumbawumba')
        h2 A CD is encoded using PCM
        h3 At 16 bits / sample
        h3 At 44.1k samples / second

      section
        h3 The algorithm involves encoding each channel of sound
        h3 as a floating point number between -1 and 1
        h5 NOTE: this is a simplification only talking about the floating point implementation of PCM encoding.

      section
        h3 You can think of a PCM encoding as an array
        h3 Each channel is "interleaved"
        h4 [L0, R0, L1, R1, L2, R2... Ln, Rn]

      section
        h2 Many people will refer to this as a lossless encoding as almost no data is lost from the original source
      
      section
        h2 An mp3, alternatively, does lossy encoding using pychoacoustic heuristics to decide which data is actually important

      section
        h1 What are the limitations of sampling?

      section
        img(src='images/Aliasing-folding.png' alt='PUSH IT TO THE NYQUIST LIMIT')

      section
        h1 You all got that right?

      section
        h3 It is something called the Nyquist limit

      section
        h3 Named after Harold Nyquist
        img(src='images/harry.jpg' alt='handsome harold nyquist')
        
      section
        h3 His work was built upon by Claude Shannon
        p Creating what we know today to be the fields of Sampling and Information theory
        
      section
        img(src='images/wat.jpg' alt='wat?')

      section
        h1 The Nyquist Limit

      section
        h3 Your sampling rate dictates the maximum frequency that can be represented in a system
        h3 You can only represent a frequency equal to half the sampling rate of your signal.
        h4 Anything higher ends up aliasing

      section(data-bespoke-backdrop='flux')
        h1 44.1 kHz
        h3 not jigawatz

      section
        h2 This is a standard sampling rate used in audio
        
      section
        img(src='images/why.jpg' alt='but why?')

      section(data-bespoke-backdrop='freq')
        h3 The human ear only hears frequencies
        h3 up to around 20 kHz

      section
        h2 44.1 kHz is an optimization for compression.
        p It minimizes the amount of data we need to sample.

      section
        h1 Why Sample Higher?

      section(data-bespoke-backdrop='higher')
        h2 96 kHz
        h3 allows you to avoid aliasing

      section(data-bespoke-backdrop='telephone')
        h1 What does a lower sample rate sounds like?
        h3 traditionally telephones are samples at 8 kHz

      section(data-bespoke-backdrop='hammer')
        h1 DEMO TIME

      section
        iframe(src='./examples/resamplr/index.html' class='demo-iframe')
      
      //- section
      //-   h2 Playing the original
      //-   pre
      //-     code.language-javascript.
      //-       function original() {
      //-         async.waterfall([
      //-           loadUrl.bind(null, 'put-url-hurr'),
      //-           playBuffer
      //-         ]);
      //-       }
      //-
      //- section
      //-   h2 Playing the Resampled Version
      //-   pre
      //-     code.language-javascript.
      //-       function downsampled() {
      //-         async.waterfall([
      //-           loadUrl.bind(null, 'put-url-hurr'),
      //-           resample,
      //-           playBuffer
      //-         ]);
      //-       }
      //-
      //- section
      //-   pre
      //-     code.language-javascript.
      //-       // http://www.html5rocks.com/en/tutorials/webaudio/intro/
      //-       function loadUrl(url, next) {
      //-         var request = new XMLHttpRequest();
      //-         request.open('GET', url, true);
      //-         request.responseType = 'arraybuffer';
      //-         request.onload = function() {
      //-           context.decodeAudioData(request.response, function (buffer) {
      //-             next(null, buffer);
      //-           });
      //-         };
      //-         request.send();
      //-       }
      //-
      //- section
      //-   pre
      //-     code.language-javascript.
      //-       function playBuffer(buffer/*, next*/) {
      //-         var source = context.createBufferSource();
      //-         source.buffer = buffer;
      //-         source.connect(context.destination);
      //-         source.start(0);
      //-       }
      //-
      //- section
      //-   pre
      //-     code.language-javascript.
      //-       function resample(buffer, next) {
      //-         var frameCount = buffer.length
      //-           * resampleRate / buffer.sampleRate;
      //-         var offlineContext = new OfflineAudioContext(
      //-           buffer.numberOfChannels, frameCount, resampleRate);
      //-         var bufferSource = offlineContext.createBufferSource();
      //-         bufferSource.buffer = buffer;
      //-         bufferSource.connect(offlineContext.destination);
      //-         bufferSource.start();
      //-         offlineContext.startRendering().then(function (renderedBuffer) {
      //-           next(null, renderedBuffer);
      //-         });
      //-       }

      section
        h2 http://kni.sh/voxelMeterJS/
        iframe.headroom(src='examples/voxel-meter' class='demo-iframe')
        a(href='https://github.com/TheAlphaNerd/voxel-meter-js/') View the Project on Github

      //- section
      //-   pre
      //-     code.language-javascript.
      //-       function Audio() {
      //-         this.context =
      //-           new (window.AudioContext || window.webkitAudioContext)();
      //-         this.analyzer = this.context.createAnalyser();
      //-         this.frequencyData = new Uint8Array(256);
      //-
      //-         wireMic(this.context, this.analyzer);
      //-
      //-         return this;
      //-       }
      //-
      //- section
      //-   pre
      //-     code.language-javascript.
      //-       function wireMic(audioContext, analyzer) {
      //-         function gotStream(stream) {
      //-           // Create an AudioNode from the stream.
      //-           var mediaStreamSource =
      //-             audioContext.createMediaStreamSource(stream);
      //-
      //-           // Connect it to the destination to hear
      //-           // yourself (or any other node for processing!)
      //-           mediaStreamSource.connect(analyzer);
      //-         }
      //-
      //-         navigator.getUserMedia = /*shim*/
      //-         navigator.getUserMedia({audio: true},
      //-           gotStream, function (err) {
      //-           console.log(err);
      //-         });
      //-       }
      //-
      //- section
      //-   pre
      //-     code.language-javascript.
      //-       Audio.prototype.getFFT = function () {
      //-         this.analyzer.getByteFrequencyData(this.frequencyData);
      //-         return this.frequencyData;
      //-       };

      section
        h2 http://kni.sh/harmonic
        h3 Visit the above link on your phone or lappy
        h4 P.S. it is about to make some sound, so turn it up!
      
      section
        h2 http://harmonic.kni.sh/
        iframe.headroom(src='http://harmonic.kni.sh/gepetto' class='demo-iframe')
      
      section
        img.headroom(src='images/wot.gif' alt='wot was that?' height='80%')

      section
        img.headroom(src='images/harmonic_series.png' alt='a harmonic series' height='80%')
      
      section
        img.headroom(src='images/fourier_flute_violin.png' alt='harmoic series of a flute and violin' height='80%')

      //- section
      //-   pre
      //-     code.language-javascript.
      //-       var context =
      //-         new (window.AudioContext || window.webkitAudioContext)();
      //-
      //-       var base = 55;
      //-       var overtone = Math.floor(Math.random() * 15) + 1;
      //-       var freq = base * overtone;
      //-       var osc = context.createOscillator();
      //-
      //-       osc.frequency.value = freq;
      //-       osc.connect(context.destination);
      //-       osc.start();

      section
        img(src='images/double.jpg' alt='as frequency increases exponentially, how we experience pitch increases linearly' width="80%")
        
      section
        h2 This was originally discovered by Pythagoras (afaik)
        img.headroom(src='images/pyth1.jpg' alt='pythagoras')
        
      section
        h2 Pythagoras discovered what we now know as the western musical cannon.
        img.headroom(src='images/pyth2.jpg' alt='moar Pythagoras')

      section(data-bespoke-backdrop='chromatic')
          h1 The Chromatic Scale

      section(data-bespoke-backdrop='pythagoras-three')
        h1 Pythagoras

      section(data-bespoke-backdrop='diatonic')
        h1 The Diatonic Scale

      section(data-bespoke-backdrop='pythagoras-four')
        h1 Pythagoras

      section(data-bespoke-backdrop='fifths')
        //- h1 The Circle of Fifths

      section(data-bespoke-backdrop='pythagoras-five')
        h1 Pythagoras

      section
        h1 The greatest musical achievement in the modern era?

      section(data-bespoke-backdrop='phish')
        h1 Phish's Set two Rotation jam 
        h3 Deer Creek Sunday August 10th 1997

      section
        h1 Musical notes as we know them
        h3 (roughly)
        h4 Ask me afterwards about how we actually use fake notes and the church was really upset about us switching

      section
        h1 Have existed longer

      section
        h1 As a means of communication
      
      section
        h1 THAN THE ENGLISH LANGUAGE

      section
        h1 Let that sink in for a second
        
      section
        h2 Thank You
        img.headroom(src='images/best-gif-evar.gif' alt='a surfing puppy' width='20%')
        h3 Myles Borins
        h4 @thealphanerd

    script(src='build/build.js')